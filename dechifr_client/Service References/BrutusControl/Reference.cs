//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dechifr_client.BrutusControl {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BrutusControl.IBrutusControl")]
    public interface IBrutusControl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/BrutusInstance", ReplyAction="http://tempuri.org/IBrutusControl/BrutusInstanceResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Threading.CancellationToken))]
        void BrutusInstance(object instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/BrutusInstance", ReplyAction="http://tempuri.org/IBrutusControl/BrutusInstanceResponse")]
        System.Threading.Tasks.Task BrutusInstanceAsync(object instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/startBrutus", ReplyAction="http://tempuri.org/IBrutusControl/startBrutusResponse")]
        void startBrutus(string encrypted_Message, System.Threading.CancellationToken t_cancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/startBrutus", ReplyAction="http://tempuri.org/IBrutusControl/startBrutusResponse")]
        System.Threading.Tasks.Task startBrutusAsync(string encrypted_Message, System.Threading.CancellationToken t_cancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/stopBrutus", ReplyAction="http://tempuri.org/IBrutusControl/stopBrutusResponse")]
        void stopBrutus(int task_Id, string final_message, string key, string email, double fiability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/stopBrutus", ReplyAction="http://tempuri.org/IBrutusControl/stopBrutusResponse")]
        System.Threading.Tasks.Task stopBrutusAsync(int task_Id, string final_message, string key, string email, double fiability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/killBrutus", ReplyAction="http://tempuri.org/IBrutusControl/killBrutusResponse")]
        void killBrutus(int id, System.Threading.CancellationToken t_cancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrutusControl/killBrutus", ReplyAction="http://tempuri.org/IBrutusControl/killBrutusResponse")]
        System.Threading.Tasks.Task killBrutusAsync(int id, System.Threading.CancellationToken t_cancel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrutusControlChannel : dechifr_client.BrutusControl.IBrutusControl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrutusControlClient : System.ServiceModel.ClientBase<dechifr_client.BrutusControl.IBrutusControl>, dechifr_client.BrutusControl.IBrutusControl {
        
        public BrutusControlClient() {
        }
        
        public BrutusControlClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrutusControlClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrutusControlClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrutusControlClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void BrutusInstance(object instance) {
            base.Channel.BrutusInstance(instance);
        }
        
        public System.Threading.Tasks.Task BrutusInstanceAsync(object instance) {
            return base.Channel.BrutusInstanceAsync(instance);
        }
        
        public void startBrutus(string encrypted_Message, System.Threading.CancellationToken t_cancel) {
            base.Channel.startBrutus(encrypted_Message, t_cancel);
        }
        
        public System.Threading.Tasks.Task startBrutusAsync(string encrypted_Message, System.Threading.CancellationToken t_cancel) {
            return base.Channel.startBrutusAsync(encrypted_Message, t_cancel);
        }
        
        public void stopBrutus(int task_Id, string final_message, string key, string email, double fiability) {
            base.Channel.stopBrutus(task_Id, final_message, key, email, fiability);
        }
        
        public System.Threading.Tasks.Task stopBrutusAsync(int task_Id, string final_message, string key, string email, double fiability) {
            return base.Channel.stopBrutusAsync(task_Id, final_message, key, email, fiability);
        }
        
        public void killBrutus(int id, System.Threading.CancellationToken t_cancel) {
            base.Channel.killBrutus(id, t_cancel);
        }
        
        public System.Threading.Tasks.Task killBrutusAsync(int id, System.Threading.CancellationToken t_cancel) {
            return base.Channel.killBrutusAsync(id, t_cancel);
        }
    }
}
